<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="manual_picture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA4QAAAOEBAMAAAALYOIIAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAeUExURebm5gAAAP////X19be3tzs7O3R0dJOTkxsbG8/Pz4fInqoAABk4SURBVHja7Z3Pc9PW
        3oc1PoW2S83Ejtl55EAnO40V2skOEgp0FwhOyo4SAmX3EsKF7mDe/oDdJbwN8N++iS3FkmPLciRb5yM/
        3ztzPU+Tnhx9nh5J1jmSHK9fLadfoBwShzwShzwShzwShzwShzwShzwShzwShzwShzwShzwShzwShzwS
        hzwShzxGVQv/OaiKxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGM4Sdzb7JI
        HPJIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPIYFXNv6kgc8kgc8kgc8kgc8kgc
        8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgcwhh+Mvcmi8Qhj8Qhj8Qhj8Qhj8Qhj8Qhj8Qhj8Qhj8Qh
        j8Qhj8Qhj8Qhj8Qhj8Qhj1Ex96aOxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGP
        xCGM4Sdzb7JIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPIYFXNv6kgc8kgc
        8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgcwhh+Mvcmi8Qhj8Qhj8Qhj8Qhj8Qhj8Qh
        j8Qhj8Qhj8Qhj8Qhj8Qhj8Qhj8Qhj8Qhj1Ex96aOxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGP
        xCGPxCGPxCGPxCGM4Sdzb7JIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPJIHPIY
        FXNv6kgc8njRfzk4rU6IQWAH+ml9tqWTSSxPoX9467T+r1+3wioVv379evIf1tg+O1Z0cgjLVPiNa2G9
        3zm8cTISR/Q5uPP0V9fC2ihR4ZprZ/11GPjn+ty+03XtrCMUnq/mzubwYWb1lWtroXBk/X2U6LPxf3ff
        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
        rmD/8yk4+1I1PAaj/SgKrcLv3GFNh6b/Nbn9+ffhn13xK7P5FVI44nr8389ufXVuvf79/E82q7P5Udn1
        KMALYWfkspj370f900YFtjf7lK8OTnHP0hYKrcTsS5uamyi0E79kVfinj0I7cSXrMNxEoa2Y8caz5cBB
        oaWYcZ3PSx+F1uKbLAb/CRwUWouZjoY3fBRajBlOSv/0HRRajK2Jywzrmyi0GyfeP/DIr9T2VlChdzfd
        4D9+xba3ggpXU3eljU0U2o/fppyV1g/8ym1vheYLz/DyWIfN50H1treKCr3jcQ6fBxXc3koqHLMvbT4x
        DgpFsPPtiHOa+skYRKEOrp9bL/P3jaCa21tVhV77OHHL4V+Hxq/o9lZWodf+5nY3XPr0fud1re1XdXur
        q7AVeP7X1//5z7PXtz5VcwOdym7SAE3QCYIqb2BVN2nRkDjkkTjkkTjkkTjkkTjkMarqTYEuGhKHPBKH
        PBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHMIafzL3JInHII3HII3HII3HII3HII3HI
        I3HII3HII3HII3HII3HII3HII3HII3HIY1TMvakjccgjccgjccgjccgjccgjccgjccgjccgjccgjccgj
        ccgjccgjccgjcQhj+MncmywShzwShzwShzwShzwShzwShzwShzwShzwShzwShzwShzwShzwShzwShzxG
        xdybOhKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHMIafzL3JInHII3HII3HI
        I3HII3HII3HII3HII3HII3HII3HII3HII3HII3HII3HIY1TMvakjccgjccgjccgjccgjccgjccgjccgj
        ccgjccgjccgjccgjccgjccgjcaii5/0/rNNNlOpA+QgAAAAASUVORK5CYII=
</value>
  </data>
</root>