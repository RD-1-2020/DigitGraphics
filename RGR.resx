<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="manual_picture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA4QAAAOEBAMAAAALYOIIAAAABGdBTUEAALGPC/xhBQAAAB5QTFRF5ubm
        AAAA////9fX1t7e3Ozs7dHR0k5OTGxsbz8/Ph8ieqgAAGThJREFUeNrtnc9z09behzU+hbZLzcSO2Xnk
        QCc7jRXayQ4SCnQXCE7KjhICZfcSwoXuYN7+gN0lvA3w376JLcWSY8tyJFvnIz/fO3M9T5OeHH2eHknW
        OZIcr18tp1+gHBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPEZVC/85qIrE
        IY/EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIYzhJ3Nvskgc8kgc8kgc8kgc8kgc
        8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgc8hgVc2/qSBzySBzySBzySBzySBzySBzySBzySBzySBzy
        SBzySBzySBzySBzySBzCGH4y9yaLxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGP
        xCGPUTH3po7EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIYzhJ3Nvskgc8kgc
        8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgc8hgVc2/qSBzySBzySBzySBzySBzySBzy
        SBzySBzySBzySBzySBzySBzySBzySBzCGH4y9yaLxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGPxCGP
        xCGPxCGPxCGPxCGPUTH3po7EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIY/EIYzh
        J3Nvskgc8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgc8kgc8hgVc2/qSBzyeNF/OTit
        TohBYAf6aX22pZNJLE+hf3jrtP6vX7fCKhW/fv168h/W2D47VnRyCMtU+I1rYb3fObxxMhJH9Dm48/RX
        18LaKFHhmmtn/XUY+Of63L7Tde2sIxSer+bO5vBhZvWVa2uhcGT9fZTos/F/d9+5lhYKR1ejFuuzWf/d
        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
        KAqtwu/cYU2Hpv81uf359+GfXfErs/kVUjjievzfz259dW69/v38Tzars/lR2fUowAthZ+SymPfvR/3T
        RgW2N/uUrw5Occ/SFgqtxOxLm5qbKLQTv2RV+KePQjtxJesw3EShrZjxxrPlwEGhpZhxnc9LH4XW4pss
        Bv8JHBRai5mOhjd8FFqMGU5K//QdFFqMrYnLDOubKLQbJ94/8Miv1PZWUKF3N93gP37FtreCCldTd6WN
        TRTaj9+mnJXWD/zKbW+F5gvP8PJYh83nQfW2t4oKveNxDp8HFdzeSiocsy9tPjEOCkWw8+2Ic5r6yRhE
        oQ6un1sv8/eNoJrbW1WFXvs4ccvhX4fGr+j2Vlah1/7mdjdc+vR+53Wt7Vd1e6ursBV4/tfX//nPs9e3
        PlVzA53KbtIATdAJgipvYFU3adGQOOSROOSROOSROOSROOQxqupNgS4aEoc8Eoc8Eoc8Eoc8Eoc8Eoc8
        Eoc8Eoc8Eoc8Eoc8Eoc8Eoc8Eoc8Eocwhp/Mvckiccgjccgjccgjccgjccgjccgjccgjccgjccgjccgj
        ccgjccgjccgjcchjVMy9qSNxyCNxyCNxyCNxyCNxyCNxyCNxyCNxyCNxyCNxyCNxyCNxyCNxyCNxCGP4
        ydybLBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPBKHPEbF3Js6Eoc8Eoc8Eoc8
        Eoc8Eoc8Eoc8Eoc8Eoc8Eoc8Eoc8Eoc8Eoc8Eoc8Eocwhp/Mvckiccgjccgjccgjccgjccgjccgjccgj
        ccgjccgjccgjccgjccgjccgjcchjVMy9qSNxyCNxyCNxyCNxyCNxyCNxyCNxyCNxyCNxyCNxyCNxyCNx
        yCNxyCNxqKLn/T+s002U6kD5CAAAAABJRU5ErkJggg==
</value>
  </data>
</root>